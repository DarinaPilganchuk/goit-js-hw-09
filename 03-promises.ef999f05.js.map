{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAeMC,EAASC,SAASC,cAAc,SA2BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAnCTS,QAAQC,IAAIf,GAEZA,EAAOgB,iBAAiB,UACxB,SAAiBC,GACfA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5ChB,EAAwBc,EAAxBd,MAAOiB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAWC,OAAOpB,EAAMqB,OACtBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAChCZ,QAAQC,IAAIS,GAEZV,QAAQC,IAAIY,GAIZ,IAFA,IAAIvB,EAAW,EAENyB,EAAI,EAAGA,EAAID,EAAWC,GAAK,EAClC1B,EAAcC,EAAUoB,GACrBM,MAAK,SAAAC,G,OAAUjC,EAAAkC,OAAOC,QAAQF,E,IAE9BG,OAAM,SAAAC,G,OAASrC,EAAAkC,OAAOI,QAAQD,E,IAEjC/B,GAAY,EACZoB,GAAsBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// const InputDelayEl= document.querySelector('input[name=delay]')\n// console.log(InputDelayEl)\n\n// const InpuStepEl = document.querySelector('input[name=step]')\n// console.log(InpuStepEl)\n\n// const InputAmountEl = document.querySelector('input[name=amount]')\n// console.log(InputAmountEl)\n\n// const BtnEl = document.querySelector('button')\n// console.log(BtnEl)\n\n\nconst formEl = document.querySelector('.form');\nconsole.log(formEl)\n\nformEl.addEventListener('submit',SubForm );\nfunction SubForm(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  let delayVal = Number(delay.value);\n  const stepVal = Number(step.value);\n  const amountVal = Number(amount.value);\n  console.log(delayVal);\n  \n  console.log(stepVal);\n\n  let position = 1;\n\n  for (let i = 0; i < amountVal; i += 1) {\n    createPromise(position, delayVal)\n      .then(result => Notify.success(result))\n\n      .catch(error => Notify.failure(error));\n\n    position += 1;\n    delayVal = delayVal + stepVal;\n  }\n}\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n  \n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n      \n    });\n  }"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","console","log","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","delayVal","Number","value","stepVal","amountVal","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.ef999f05.js.map"}